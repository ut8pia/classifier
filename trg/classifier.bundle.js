!function(t,e){"object"==typeof exports&&"object"==typeof module?module.exports=e():"function"==typeof define&&define.amd?define([],e):"object"==typeof exports?exports.classifier=e():t.classifier=e()}(self,(()=>(()=>{"use strict";var t={d:(e,r)=>{for(var i in r)t.o(r,i)&&!t.o(e,i)&&Object.defineProperty(e,i,{enumerable:!0,get:r[i]})},o:(t,e)=>Object.prototype.hasOwnProperty.call(t,e),r:t=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})}},e={};t.r(e),t.d(e,{core:()=>d,global:()=>w,queue:()=>m});class r{constructor(t=void 0,e=void 0){this._prev=t,this._last=e,this._length=t?t._length+1:void 0!==e?1:0}static of(...t){return(new r).addAll(t)}get prev(){return this._prev}get last(){return this._last}get length(){return this._length}isEmpty(){return 0==this._length}add(t){return new r(0<this.length?this:void 0,t)}addAll(t){let e=this;for(let r of t)e=e.add(r);return e}across(t){const e=this,r=new s;return r[Symbol.iterator]=function*(){for(let r of t)yield e.add(r)},r}backPaths(){const t=new s;let e=this;return t[Symbol.iterator]=function*(){for(;e&&!e.isEmpty();)yield e,e=e.prev},t}backSteps(){const t=new s;let e=this;return t[Symbol.iterator]=function*(){for(;e&&!e.isEmpty();)yield e.last,e=e.prev},t}toArray(t=this.length,e=(t=>t)){const r=new Array(t);let i=this;for(;0<t;)r[t-1]=e(i.last),i=i.prev,t--;return r}}class i{what(...t){throw"abstract method!"}static as(t){if(t instanceof i)return t;{const e=new i;return e.what=t,e}}toFunc(){return(...t)=>this.what(...t)}static of(...t){const e=new Map(t);return i.as((t=>e.get(t)))}if(t){return i.if(this,t)}then(t){return i.then([this,t])}else(t){return i.else([this,t])}each(t,e=void 0,r=void 0){return i.each(this,t)}match(t,e=!1){return i.match(e,this,t)}which(t){return i.which(this,t)}when(t){return i.when(this,t)}self(){return i.self(this)}let(t,e){return i.let(this,t,e)}}i.if=function(t,e){return i.as((r=>i.what(e,r)?i.what(t,r):void 0))},i.then=function(t){return i.as((e=>{let r=e;for(let e of t)if(r=i.what(e,r),void 0===r)break;return r}))},i.else=function(t){return i.as((e=>{let r;for(let s of t)if(r=i.what(s,e),void 0!==r)break;return r}))},i.each=function(...t){return i.as((e=>e.length<=t.length?e.across(i.what(t[e.length-1],e.last)):s.of()))},i.what=function(t,...e){return t instanceof i?t.what(...e):"function"==typeof t?t(...e):t},i.match=function(t,...e){const r=t?t=>t.map(((t,r)=>i.what(e[r],t))):t=>e.map((e=>i.what(e,t)));return i.as(r)},i.which=function(t,e){return i.as(t).then((t=>s.as(t).which(e)))},i.when=function(t,e){return i.as(t).then((t=>i.what(e,t)?t:void 0))},i.self=function(t){return i.as((e=>{const r=new s;return r[Symbol.iterator]=function*(){let r=e;for(;;)r=i.what(t,r),yield r},r}))},i.let=function(t,e,r){return i.as((s=>s===e?r:i.what(t,s)))};class s{[Symbol.iterator](){throw"abstract method!"}toArray(){return Array.from(this)}static as(t=void 0){if(t instanceof s)return t;{const e=new s;return e[Symbol.iterator]=t?t[Symbol.iterator]?t[Symbol.iterator].bind(t):[t][Symbol.iterator]:function*(){},e}}static of(...t){return s.as(t)}equals(t){return s.equals(this,t)}isEmpty(){return void 0===this.what()}if(t){return s.which(this,t)}which(t){return s.which(this,t)}then(t){return s.then(this,t)}else(t=void 0){return void 0===t?s.else(this):s.else(s.of(this,t))}match(t=void 0){return void 0===t?s.match(...Array.from(this)):s.match(this,t)}each(t=(()=>{})){if(!("function"==typeof t||t instanceof i))return void 0===t?s.each(...Array.from(this)):s.each(this,t);{let e=0;for(let r of this)i.what(t,r,e++)}}when(t,e=!0,r=e){return s.when(this,t,e,r)}self(t=!1){return s.self(this,t)}what(t=void 0,e=void 0){return s.what(this,t,e)}let(t){return s.let(this,t)}}s.equals=function(t,e){if("string"==typeof t||!s.isIterable(t)||"string"==typeof e||!s.isIterable(e))return t===e;{const r=t[Symbol.iterator](),i=e[Symbol.iterator]();for(;;){const t=r.next(),e=i.next();if(t.done||e.done)return t.done===e.done;if(!s.equals(t.value,e.value))return!1}}},s.isIterable=function(t){return null!=t&&t[Symbol.iterator]},s.NATURAL=new s,s.NATURAL[Symbol.iterator]=function*(){let t=0;for(;;)yield t++},s.which=function(t,e){const r=new s;return r[Symbol.iterator]=function*(){for(let r of t)i.what(e,r)&&(yield r)},r},s.self=function(t,e=!1){const r=new s;return r[Symbol.iterator]=function*(){for(;;)yield t},e?s.else(r):r},s.then=function(t,e){const r=new s;return r[Symbol.iterator]=function*(){let r=0;for(let s of t)yield i.what(e,s,r++)},r},s.else=function(t,e=1){const r=new s;return r[Symbol.iterator]=function*(){for(let r of t)if(0<e&&r[Symbol.iterator])for(let t of s.else(r,e-1))yield t;else yield r},r},s.match=function(...t){const e=new s;return e[Symbol.iterator]=function*(){const e=t.map((t=>t[Symbol.iterator]?t:s.of(t))).map((t=>t[Symbol.iterator]()));for(;;){const t=e.map((t=>t.next()));if(t.every((t=>t.done)))break;yield t.map((t=>t.value))}},e},s.each=function(...t){return t=t.map((t=>t[Symbol.iterator]?t:[t])),i.as((e=>e.length<t.length?e.across(t[e.length]):s.of()))},s.when=function(t,e,r=!0,n=r){if("number"==typeof e){const t=e;e=(e,r)=>r===t}const o=new s;return o[Symbol.iterator]=r?function*(){let r=0,s=!1;for(let o of t)s?yield o:i.what(e,o,r)&&(s=!0,n&&(yield o)),r++}:function*(){let r=0,s=!1;for(let o of t){if(s)break;i.what(e,o,r)?(s=!0,n&&(yield o)):yield o,r++}},o},s.what=function(t,e,r){if(e){void 0===r&&(r=s.what(t),t=s.when(t,((t,e)=>1===e)));for(let s of t)r=i.what(e,r,s);return r}for(let e of t)return e},s.let=function(t,e){return s.else([t,e])};class n extends s{constructor(){super()}n(){throw"abstract method!"}has(t){throw"abstract method!"}add(t){throw"abstract method!"}remove(t){throw"abstract method!"}clear(){throw"abstract method!"}[Symbol.iterator](){throw"abstract method!"}view(){throw"abstract method!"}isEmpty(){return 0===this.n()}let(t){return this.add(t),this}letAll(t){for(let e of t)this.add(e);return this}removeAll(t){let e=!1;for(let r of t)e||=this.remove(r);return e}}class o extends n{constructor(){super()}peek(t=!0){throw"abstract method!"}poll(t=!0){throw"abstract method!"}view(t=!0){return new o.View(this,t)}select(t,e=!0){const r=this.n()-t,i=new Array(r<0?0:r).fill(void 0);let s=e?i.length-1:0,n=e?-1:1;for(;this.n()>t;){const t=this.poll(!e);i[s]=t,s+=n}return i}search(t,e=void 0){const r=Array.from(this),n=new s;return n[Symbol.iterator]=()=>(this.clear(),this.letAll(r),{next:()=>{if(0===this.n())return{value:void 0,done:!0};{let r=this.poll(),s=i.what(t,r);return s&&(this.letAll(s),void 0!==e&&this.select(e)),{value:r,done:!1}}}}),n}}o.View=class extends o{constructor(t,e=!0){super(),this._source=t,this._direct=e}get source(){return this._source}get direct(){return this._direct}view(t=!0){return new o.View(this.source,this.direct?t:!t)}[Symbol.iterator](){if(this.direct)return this.source[Symbol.iterator]();throw"unsupported method!"}n(){return this.source.n()}has(t){return this.source.has(t)}add(t){return this.source.add(t)}remove(t){return this.source.remove(t)}clear(){return this.source.clear()}peek(t=!0){return this.source.peek(this.direct?t:!t)}poll(t=!0){return this.source.poll(this.direct?t:!t)}};class h extends o{constructor(t=!0,e=[]){super(),this._fifo=t,this._items=e}get fifo(){return this._fifo}get items(){return this._items}n(){return this.items.length}has(t){return!1}add(t){return this.items.push(t),!0}remove(t){return!1}peek(t=!0){return this.items[this.index(t)]}poll(t=!0){return 0===this.index(t)?this.items.shift():this.items.pop()}index(t){return this.fifo?t?0:this.items.length-1:t?this.items.length-1:0}clear(){this.items.length=0}[Symbol.iterator](){return this.items[Symbol.iterator]()}view(t=!0){const e=new o.View(this,t);if(!t){const t=this;e[Symbol.iterator]=function*(){let e=t.items.length-1;for(;0<=e;)yield t.items[e],e--}}return e}search(t,e=void 0){const r=this.fifo?t:e=>Array.from(i.what(t,e)).reverse();return super.search(r,e)}}const a={ASCENDING:(t,e)=>t===e?0:t<e?-1:e<t?1:0,DESCENDING:(t,e)=>t===e?0:t>e?-1:e>t?1:0,INSERTION:void 0,SINGULAR:(t,e)=>0};class l extends o{constructor(t=(()=>a.ASCENDING),e=l.Node.of(void 0,i.what(t,new r))){super(),this._root=e,this._sorter=t,this._defaultView=new l.View(this,r.of([void 0,e]))}static of(...t){return new l((e=>t[e.length]))}get root(){return this._root}get sorter(){return this._sorter}get defaultView(){return this._defaultView}n(t=void 0){return this.defaultView.n(t)}has(t){return this.defaultView.has(t)}add(t,e=1){return this.defaultView.add(t,e)}remove(t){return this.defaultView.remove(t)}clear(){return this.defaultView.clear()}[Symbol.iterator](){return this.defaultView[Symbol.iterator]()}peek(t=!0){return this.defaultView.peek(t)}poll(t=!0){return this.defaultView.poll(t)}class(...t){return this.defaultView.class(...t)}space(...t){return this.defaultView.space(...t)}view(t=!0,e=[]){return this.defaultView.view(t,e)}views(t,e=t,...r){return this.defaultView.views(t,e,...r)}static path(t,e,r=!1,s=void 0){let n,o,h=t,a=h.last[1];for(let t of e){if([n,o]=a.getChild(t),!o){if(!r)return;const e=i.what(s,h);o=l.Node.of(t,e),a.children.items.splice(n,0,o)}h=h.add([n,o]),a=o}return h}static peekPath(t,e=!0){let r=t,i=r.last[1];for(;!i.children.isEmpty()&&!i.nin;){const t=e?0:i.children.n()-1;i=i.children.peek(e),r=r.add([t,i])}return 1<r.length?r:void 0}static incPath(t,e){for(t.last[1]._nin+=e,t=t.prev;t;)t.last[1]._nout+=e,t=t.prev}static simplifyPath(t){for(;t.prev;){let[e,r]=t.last;if(0!==r.n())break;t.prev.last[1].children.items.splice(e,1),t=t.prev}}static removePath(t){l.incPath(t,-t.last[1].nin),l.simplifyPath(t)}}l.View=class extends o{constructor(t,e,r=!0){super(),this._classifier=t,this._path=e,this._direct=r}get classifier(){return this._classifier}get path(){return this._path}get direct(){return this._direct}keys(){return this.path.toArray(this.path.length-1,(([t,e])=>e.key))}n(t=void 0){if(void 0===t)return this.path.last[1].n();{const e=l.path(this.path,t);return e?e.last[1].nin:0}}has(t){return null!=l.path(this.path,t)}add(t,e=1){const r=l.path(this.path,t,!0,this.classifier.sorter),i=!r.last[1].nin;return l.incPath(r,e),l.simplifyPath(r),i}let(t,e=1){return this.add(t,e),this}remove(t){const e=l.path(this.path,t);if(e){const t=e.last[1].nin;return l.incPath(e,-t),l.simplifyPath(e),!0}return!1}clear(){this.path.last[1].children.clear(),this.path.prev&&(this.path.prev.last[1]._nout=0)}peek(t=!0){this.direct||(t=!t);const e=l.peekPath(this.path,t);return e?e.toArray(e.length-this.path.length,(([t,e])=>e.key)):void 0}poll(t=!0){this.direct||(t=!t);const e=l.peekPath(this.path,t);if(e){const t=e.toArray(e.length-this.path.length,(([t,e])=>e.key));return l.removePath(e),t}}[Symbol.iterator](){return new h(!1).let(new r).search((t=>t.across(t.length?t.last.children.view(this.direct):this.path.last[1].children.view(this.direct)))).which((t=>t.length&&0<t.last.nin)).then((t=>t.toArray(t.length,(t=>t.key))))[Symbol.iterator]()}class(...t){return new h(!1).let(new r).search(this.space(...t)).which((e=>e.length>=t.length&&e.last[1].nin>0)).then((t=>t.toArray(t.length,(([t,e])=>e.key))))}space(...t){return i.as((e=>{const r=e.last?e.last[1]:this.path.last[1],i=t[e.length];if(void 0===i)return e.across(r.children.view(this.direct).toArray().map(((t,e)=>[e,t])));{const[t,s]=r.getChild(i);return s?[e.add([t,s])]:[]}}))}view(t=!0,e=[]){const r=l.path(this.path,e);return r?new l.View(this.classifier,r,this.direct?t:!t):void 0}views(t,e=t,...i){const n=this.space(...i).then((t=>s.which(t,(t=>t.length<=e))));return(new h).let(new r).search(n).which((e=>t<=e.length)).then((t=>new l.View(this.classifier,this.path.addAll(t.toArray()))))}},l.Node=class{constructor(t,e,r,i){this._key=t,this._nin=e,this._nout=r,this._children=i}static of(t=void 0,e=void 0){const r=e?new c(((t,r)=>e(t.key,r.key))):new h;return new l.Node(t,0,0,r)}get key(){return this._key}get nin(){return this._nin?this._nin:0}get nout(){return this._nout?this._nout:0}get children(){return this._children}n(){return this.nin+this.nout}getChild(t){if(this.children instanceof c)return c.logSearch(new l.Node(t),this.children.items,this.children.comparator);{let e,r,i=this.children.items;for(e=0;e<i.length;e++)if(r=i[e],r.key===t)return[e,r];return[i.length,void 0]}}};class c extends h{constructor(t=a.ASCENDING,e=[]){super(),this._comparator=t,this._items=e}get items(){return this._items}get comparator(){return this._comparator}has(t){const[e,r]=c.logSearch(t,this.items,this.comparator);return void 0!==r}add(t){const[e,r]=c.logSearch(t,this.items,this.comparator);return void 0===r&&(this.items.splice(e,0,t),!0)}remove(t){const[e,r]=c.logSearch(t,this.items,this.comparator);return void 0!==r&&(this.items.splice(e,1),!0)}static logSearch(t,e,r,i=0,s=e.length){for(;i<s;){const n=i+s>>>1,o=e[n],h=r(o,t);if(0===h)return[n,o];h<0?i=n+1:s=n}return[i]}}class u extends o{constructor(t,e,r=new l){super(),this._to=t,this._from=e,this._classifier=r}get to(){return this._to}get from(){return this._from}get classifier(){return this._classifier}[Symbol.iterator](){const t=this,e=this.from;return function*(){for(let r of t.classifier)yield e(r)}()}n(t=void 0){return void 0===t?this.classifier.n():this.classifier.n(this.to(t))}has(t){return this.classifier.has(this.to(t))}add(t,e=1){return this.classifier.add(this.to(t),e)}let(t,e=1){return this.add(t,e),this}remove(t,e=1){return this.classifier.remove(this.to(t),e)}clear(){this.classifier.clear()}peek(t=!0){const e=this.classifier.peek(t);if(void 0!==e)return this.from(e)}poll(t=!0){const e=this.classifier.poll(t);if(void 0!==e)return this.from(e)}class(...t){return this.classifier.class(...t).then((t=>this.from(t)))}view(t=!0){const e=new o.View(this,t);if(!t){const r=this;e[Symbol.iterator]=function*(){const e=r.classifier.view(t,[]);for(let t of e)yield r.from(t)}}return e}}class f extends u{constructor(t=(t=>t),e=new l){super(f.to(t),f.FROM,e)}static of(t,...e){return new f(t,l.of(...e))}static to(t){return e=>{const r=t(e);return Array.isArray(r)?[...r,e]:[r,e]}}}f.FROM=t=>t[t.length-1];const d={Collection:n,Queue:o},m={ArrayQueue:h,SortedArray:c,Classifier:l,CommonCollection:u,TrueSet:f},w={ORDER:a};return e})()));